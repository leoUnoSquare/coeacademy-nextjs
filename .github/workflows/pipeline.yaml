name: Web app pipeline

on:
  workflow_dispatch:

  push:
    branches:
      - 'day5-standalone'
    paths:
      - 'codeacademy-nextjs/**'
      - '.github/workflows/pipeline.yaml'

env:
  REGISTRY: ${{vars.AWS_ACCOUNT_ID}}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com

jobs:
  build_and_push_to_ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{secrets.AWS_ACCESS_KEY_ID}}
          password: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Create app .env
        run: |
          echo 'NEXT_PUBLIC_FIREBASE_WEB_APP_API_KEY=${{secrets.APP_NEXT_PUBLIC_FIREBASE_WEB_APP_API_KEY}}' >> .env.local
          echo 'NEXT_PUBLIC_AUTH_DOMAIN=${{secrets.APP_NEXT_PUBLIC_AUTH_DOMAIN}}' >> .env.local
          echo 'NEXT_PUBLIC_PROJECT_ID=${{secrets.APP_NEXT_PUBLIC_PROJECT_ID}}' >> .env.local
          echo 'NEXT_PUBLIC_STORAGE_BUCKET=${{secrets.APP_NEXT_PUBLIC_STORAGE_BUCKET}}' >> .env.local
          echo 'NEXT_PUBLIC_FIREBASE_WEB_APP_SENDER_ID=${{secrets.APP_NEXT_PUBLIC_FIREBASE_WEB_APP_SENDER_ID}}' >> .env.local
          echo 'NEXT_PUBLIC_FIREBASE_WEB_APP_APP_ID=${{secrets.APP_NEXT_PUBLIC_FIREBASE_WEB_APP_APP_ID}}' >> .env.local
          echo 'FIREBASE_PROJECT_ID=${{secrets.APP_FIREBASE_PROJECT_ID}}' >> .env.local
          echo 'FIREBASE_CLIENT_EMAIL=${{secrets.APP_FIREBASE_CLIENT_EMAIL}}' >> .env.local
          echo 'FIREBASE_PRIVATE_KEY="${{secrets.APP_FIREBASE_PRIVATE_KEY}}"' >> .env.local
          echo 'NEXTAUTH_SECRET=${{secrets.APP_NEXTAUTH_SECRET}}' >> .env.local
          echo 'NEXTAUTH_URL=${{secrets.APP_NEXTAUTH_URL}}' >> .env.local

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./
          file: ./Dockerfile
          tags: |
            ${{ env.REGISTRY }}/coeacademy-nextjs:latest
            ${{ env.REGISTRY }}/coeacademy-nextjs:${{ github.sha }}
      

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_ecr

    steps:
      - name: Pull latest in EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: 'ec2-user'
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            aws ecr get-login-password | docker login --username AWS --password-stdin ${{ env.REGISTRY }}
            docker pull ${{ env.REGISTRY }}/coeacademy-nextjs:latest
            docker rm --force ui_app
            docker run -d --name ui_app -p 80:3000 ${{ env.REGISTRY }}/coeacademy-nextjs:latest